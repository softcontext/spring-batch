<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="domain" class="com.example.demo.tasklet.Domain" scope="prototype"/>

	<bean id="flatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="id, domain" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="domain" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="multiResourceReader" class="org.springframework.batch.item.file.MultiResourceItemReader">
		<property name="resources" value="file:csv/inputs/domain-*.csv" />
		<property name="delegate" ref="flatFileItemReader" />
	</bean>

	<bean id="flatFileItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<property name="resource" value="file:csv/outputs/domain.all.csv" />
		<property name="appendAllowed" value="true" />
		<property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="," />
				<property name="fieldExtractor">
					<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="id, domain" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id="customWriter" class="com.example.demo.tasklet.CustomWriter"></bean>

	<batch:job id="readMultiFileJob">
		<batch:step id="step1">
			<batch:tasklet>
				<!-- <batch:chunk reader="multiResourceReader" writer="flatFileItemWriter" commit-interval="1" /> -->
				<batch:chunk reader="multiResourceReader" writer="customWriter" commit-interval="3" />
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
</beans>
